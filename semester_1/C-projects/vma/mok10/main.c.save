#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <limits.h>
#include <float.h>
#include <stdbool.h>
#include <assert.h>
#include <string.h>

typedef struct
{
    void * destination;
    void * source;
    int type_bytes;
    int num;
    void* exp_val;
} test_case;

void* copy_mem(void * destination, void* source, unsigned int num)
{
    return memcpy(destination, source, num);
}

int main()
{
    char dest1[64];
    int dest2[10];

    int src2[] = {3, 7};
    int exp2[] = {3, 7};

    int src3[] = {0, INT_MIN, -1};
    int exp3[] = {0, INT_MIN, -1};

    test_case tests[] = {
        {dest1, "java", 1, 3, "jav"},
        {dest1, " ", 1, 1, " "},
        {dest2, src2, 4, 2, exp2},
        {dest2, src3, 4, 2, exp3}
    };

    for(int i = 0; i < sizeof(tests) / sizeof (test_case); i++)
    {
        copy_mem(tests[i].destination, tests[i].source, tests[i].num  * tests[i].type_bytes);
        assert(memcmp(tests[i].destination, tests[i].exp_val, tests[i].num * tests[i].type_bytes) == 0);
    }

    return 0;
}
