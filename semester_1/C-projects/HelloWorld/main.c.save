#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <assert.h>
#include <limits.h>

unsigned int sum_r (unsigned int n)
{
    if(n == 0)
        return 0;
    return (n + sum_r(n - 1));
}

unsigned int sum_c (unsigned int n)
{
    unsigned int s = 0;
    for(unsigned int i = 0; i <= n; i++)
    {
        s += i;
    }
    return s;
}


int main()
{
    /*
    int g = 9, sum = 0; while(g > 0) sum = sum + g--;

    printf("%d\n", 3+3*3-3);

    int i = 24; do { i++; printf("ping\n");} while (!(i % 5) || (i % 9 == 0) || !(i % 13));
     printf("\n");

    for(int i = 3, j = 7; i++ <= j--; )
    {
        printf("ping\n");
    }

    time(NULL);
    for(int i = 0; i < 100; i++)
    {
        int a = rand();

    }

    //printf("a\n");
    //int i = 12, sum = 0; do { if (i < 1) break; sum = i + sum - 1; } while(1);

    int x[256];
    for (int i = 0; i < 256; i++)
    {
        x[i]=255-i;
        printf("%d\n", x[i]);
    }
    unsigned a = 0;

    assert(sum_r(17) == 17 * 9);
    assert(sum_c(17) == 17 * 9);
    assert(sum_r(0) == 0);
    assert(sum_c(0) == 0);
    */
    
    printf("%c", argv[0][0]
"%d", strlen(argv[2])
"%s", argv[2] - 5
"%c", str[strlen(argv[argc - 1] - 3])

    return 0;
}




