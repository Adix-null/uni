Eismas: a project for simulating traffic flow with java OOP features.
To execute the program run Main.java in an IDE.
The program has an interactive text-based menu for managing the traffic
users which looks like this:
    1. Create vehicle
    2. Start vehicle
    3. Stop vehicle
    4. Move vehicle cartesian
    5. Move vehicle polar
    6. Switch vehicle
    7. Print vehicle info
    8. Load data
    9. Save data
    10. Exit program
Main classes:
    Main.java - Main class that manages the program on a high level.
    TrafficUser - Abstract base class that defines the fields child
    classes will implement.
    TrafficException - Base class for throwing exceptions.
    TrafficUserFactory - Factory interface for creating objects.
    DataManager - Helper class to save vehicle data.
Class hierarchy:
    Automobile & Police inherit from TrafficUser,
    InactiveException & OutOfBoundsException inherit from
    TrafficException,
    AutomobileFactory and PoliceFactory implement TrafficUserFactory
    interface,
    VehicleType enum, DataManager and Main class are independent.
Considerations for future development: GUI, more vehicle types,
traffic rules and automatic movement every update.
A specific OOP pattern used was a factory method.

